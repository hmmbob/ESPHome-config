substitutions:
  devicename: waterlezer
  friendly_name: Waterlezer
  device_description: Water meter sensor
  version: "v23.08.03"

################ Generics ################
esphome:
  name: ${devicename}
  friendly_name: ${friendly_name}
  comment: "${device_description}"
  name_add_mac_suffix: false
  platformio_options:
    upload_speed: 921600

  project:
    name: smartstuff.waterlezer
    version: ${version}

esp8266:
  board: esp12e
  restore_from_flash: true

status_led:
  pin:
    number: 2
    inverted: true

wifi:
  manual_ip:
    static_ip: !secret wifi_static_ip_waterlezer

# General settings: captive portal, logger, api, ota, time, restart switch, wifi
# General sensors: status, uptime, version, wifi info etc
packages:
  general_settings: !include general_settings.yaml
  general_sensors: !include general_sensors.yaml

web_server:

api:
  #via Home Assistant Ontwikkelhulpmiddelen > services zoeken op esphome.watermeter_set_water_reading en via deze methode de juiste beginstand invoeren
  services:
    - service: set_water_reading
      variables:
        meter_value: int
      then:
        - globals.set:
            id: totalWaterUsage
            value: !lambda "return ( meter_value );"

################ Sensors ################
globals:
  - id: totalWaterUsage
    type: int
    restore_value: true # aanpassen naar no indien de nieuwe waarde onder de oude ligt
    initial_value: "0" # beginstand van je watermeter -> aanpassen via Home Assistant services

sensor:
  - platform: pulse_counter
    pin:
      number: 5
      mode:
        input: true
        pullup: true #v3.5 aanzetten
    id: watermeter_pulse
    name: "Watermeter pulse"
    count_mode:
      rising_edge: DISABLE
      falling_edge: INCREMENT
    state_class: measurement
    # update_interval: 1s
    internal_filter: 100us
    accuracy_decimals: 0
    unit_of_measurement: "L/min"
    internal: true

  - platform: template
    name: "Watermeter total"
    state_class: "total_increasing"
    device_class: "water"
    icon: mdi:water
    unit_of_measurement: L
    accuracy_decimals: 0
    lambda: |-
      if (id(watermeter_pulse).state > 0) id(totalWaterUsage) += 1;
      return id(totalWaterUsage);
